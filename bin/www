#!/usr/bin/env node

/**
 * Module dependencies.
 */
require("dotenv").config();
const clc = require("console-log-colors");
const http = require("http");
const app = require("../src/app");

/**
 * Get port from environment and store in Express.
 */
const port = normalizePort(process.env.APP_PORT || "3000");
app.set("port", port);

/**
 * Create HTTP server.
 */
const server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  if (error.syscall !== "listen") throw error;
  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  switch (error.code) {
    case "EACCES":
      console.log(clc.red(bind + " requires elevated privileges"));
      process.exit(1);
    case "EADDRINUSE":
      console.log(clc.red(bind + " is already in use"));
      process.exit(1);
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  const addr = server.address();
  console.clear();
  console.log(clc.green("App is listening on http://localhost:" + addr.port));
}
